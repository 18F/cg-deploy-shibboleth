---
groups:
- name: all
  jobs:
  - deploy-shibboleth-staging
  - deploy-shibboleth-production
- name: staging
  jobs:
  - deploy-shibboleth-staging
- name: production
  jobs:
  - deploy-shibboleth-production

jobs:
- name: deploy-shibboleth-staging
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: shibboleth-config
      trigger: true
    - get: common-staging
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-staging
    - get: cg-s3-shibboleth-release
      trigger: true
    - get: secureproxy-release
      trigger: true
    - get: shibboleth-stemcell-xenial
      trigger: true
  - put: shibboleth-staging-deployment
    params:
      manifest: shibboleth-config/bosh/manifest.yml
      vars_files:
      - terraform-yaml/state.yml
      - common-staging/staging-shibboleth.yml
      - shibboleth-config/bosh/varsfiles/staging.yml
      releases:
      - cg-s3-shibboleth-release/*.tgz
      - secureproxy-release/*.tgz
      stemcells:
      - shibboleth-stemcell-xenial/*.tgz
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy shibboleth on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed shibboleth on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

- name: deploy-shibboleth-production
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: shibboleth-config
      trigger: true
      passed: [deploy-shibboleth-staging]
    - get: common-production
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-production
    - get: cg-s3-shibboleth-release
      trigger: true
      passed: [deploy-shibboleth-staging]
    - get: secureproxy-release
      trigger: true
      passed: [deploy-shibboleth-staging]
    - get: shibboleth-stemcell-xenial
      trigger: true
      passed: [deploy-shibboleth-staging]
  - put: shibboleth-production-deployment
    params:
      manifest: shibboleth-config/bosh/manifest.yml
      vars_files:
      - terraform-yaml/state.yml
      - common-production/production-shibboleth.yml
      - shibboleth-config/bosh/varsfiles/production.yml
      releases:
      - cg-s3-shibboleth-release/*.tgz
      - secureproxy-release/*.tgz
      stemcells:
      - shibboleth-stemcell-xenial/*.tgz
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy shibboleth on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed shibboleth on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

resources:
- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-url}}
    branch: {{pipeline-tasks-git-branch}}

- name: common-staging
  type: s3-iam
  source:
    region_name: {{shibboleth-private-region}}
    bucket: {{shibboleth-private-bucket}}
    versioned_file: staging-shibboleth.yml

- name: common-production
  type: s3-iam
  source:
    region_name: {{shibboleth-private-region}}
    bucket: {{shibboleth-private-bucket}}
    versioned_file: production-shibboleth.yml

- name: shibboleth-config
  type: git
  source:
    uri: {{cg-deploy-shibboleth-git-url}}
    branch: {{cg-deploy-shibboleth-git-branch}}

- name: shibboleth-stemcell-xenial
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-xenial-go_agent

- name: cg-s3-shibboleth-release
  type: s3-iam
  source:
    regexp: shibboleth-(.*).tgz
    <<: *s3-release-params

- name: secureproxy-release
  type: s3-iam
  source:
    regexp: secureproxy-(.*).tgz
    <<: *s3-release-params

- name: shibboleth-staging-deployment
  type: bosh-deployment
  source:
    target: {{shibboleth-staging-deployment-bosh-target}}
    client: {{shibboleth-staging-deployment-bosh-client-id}}
    client_secret: {{shibboleth-staging-deployment-bosh-client-passphrase}}
    deployment: {{shibboleth-staging-deployment-bosh-deployment}}
    ca_cert: ((bosh-ca-cert))

- name: shibboleth-production-deployment
  type: bosh-deployment
  source:
    target: {{shibboleth-production-deployment-bosh-target}}
    client: {{shibboleth-production-deployment-bosh-client-id}}
    client_secret: {{shibboleth-production-deployment-bosh-client-passphrase}}
    deployment: {{shibboleth-production-deployment-bosh-deployment}}
    ca_cert: ((bosh-ca-cert))

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

- name: terraform-yaml-staging
  type: s3-iam
  source:
    bucket: {{tf-state-bucket}}
    versioned_file: {{tf-state-file-staging}}
    region_name: {{aws-region}}

- name: terraform-yaml-production
  type: s3-iam
  source:
    bucket: {{tf-state-bucket}}
    versioned_file: {{tf-state-file-production}}
    region_name: {{aws-region}}

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource

s3-release-params: &s3-release-params
  bucket: {{s3-bosh-releases-bucket}}
  region_name: {{aws-region}}
  private: true
