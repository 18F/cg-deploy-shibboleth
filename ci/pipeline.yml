---
groups:
- name: all
  jobs:
  - deploy-shibboleth-staging
  - deploy-shibboleth-production
- name: staging
  jobs:
  - deploy-shibboleth-staging
- name: production
  jobs:
  - deploy-shibboleth-production

jobs:
- name: deploy-shibboleth-staging
  plan:
  - aggregate:
    - get: master-bosh-root-cert
    - get: shibboleth-config
      trigger: true
    - get: common
      resource: common-staging
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-staging
    - get: cg-s3-shibboleth-release
      trigger: true
    - get: shibboleth-stemcell
      trigger: true
  - task: shibboleth-manifest
    file: shibboleth-config/ci/generate-deployment-manifest.yml
    params:
      ENVIRONMENT_FILE: shibboleth-staging.yml
  - put: shibboleth-staging-deployment
    params:
      cert: master-bosh-root-cert/master-bosh.crt
      manifest: shibboleth-manifest/manifest.yml
      releases:
      - cg-s3-shibboleth-release/*.tgz
      stemcells:
      - shibboleth-stemcell/*.tgz
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy shibboleth on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed shibboleth on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

- name: deploy-shibboleth-production
  plan:
  - aggregate:
    - get: master-bosh-root-cert
    - get: shibboleth-config
      trigger: true
      passed: [deploy-shibboleth-staging]
    - get: common
      resource: common-production
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-production
    - get: cg-s3-shibboleth-release
      trigger: true
      passed: [deploy-shibboleth-staging]
    - get: shibboleth-stemcell
      trigger: true
      passed: [deploy-shibboleth-staging]
  - task: shibboleth-manifest
    file: shibboleth-config/ci/generate-deployment-manifest.yml
    params:
      ENVIRONMENT_FILE: shibboleth-production.yml
  - put: shibboleth-production-deployment
    params:
      cert: master-bosh-root-cert/master-bosh.crt
      manifest: shibboleth-manifest/manifest.yml
      releases:
      - cg-s3-shibboleth-release/*.tgz
      stemcells:
      - shibboleth-stemcell/*.tgz
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy shibboleth on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed shibboleth on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: {{slack-channel}}
      username: {{slack-username}}
      icon_url: {{slack-icon-url}}

resources:
- name: master-bosh-root-cert
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{shibboleth-production-private-bucket}}
    region_name: {{shibboleth-production-private-region}}
    secret_access_key: {{ci-secret-access-key}}
    versioned_file: master-bosh.crt

- name: common-staging
  type: cg-common
  source:
    region: {{shibboleth-staging-private-region}}
    bucket_name: {{shibboleth-staging-private-bucket}}
    access_key_id: {{ci-access-key-id}}
    secret_access_key: {{ci-secret-access-key}}
    secrets_file: shibboleth-staging.yml
    secrets_passphrase: {{shibboleth-staging-private-passphrase}}
    bosh_cert: bosh.pem

- name: common-production
  type: cg-common
  source:
    region: {{shibboleth-production-private-region}}
    bucket_name: {{shibboleth-production-private-bucket}}
    access_key_id: {{ci-access-key-id}}
    secret_access_key: {{ci-secret-access-key}}
    secrets_file: shibboleth.yml
    secrets_passphrase: {{shibboleth-production-private-passphrase}}
    bosh_cert: bosh.pem

- name: shibboleth-config
  type: git
  source:
    uri: {{cg-deploy-shibboleth-git-url}}
    branch: {{cg-deploy-shibboleth-git-branch}}

- name: shibboleth-stemcell
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: cg-stemcell-images
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-ubuntu-trusty-go_agent.tgz
    region_name: us-gov-west-1
    secret_access_key: {{ci-secret-access-key}}

- name: cg-s3-shibboleth-release
  type: s3
  source:
    region_name: {{s3-bosh-releases-region}}
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: shibboleth-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}

- name: shibboleth-staging-deployment
  type: 18f-bosh-deployment
  source:
    target: {{shibboleth-staging-deployment-bosh-target}}
    username: {{shibboleth-staging-deployment-bosh-username}}
    password: {{shibboleth-staging-deployment-bosh-password}}
    deployment: {{shibboleth-staging-deployment-bosh-deployment}}
    ignore_ssl: false

- name: shibboleth-production-deployment
  type: 18f-bosh-deployment
  source:
    target: {{shibboleth-production-deployment-bosh-target}}
    username: {{shibboleth-production-deployment-bosh-username}}
    password: {{shibboleth-production-deployment-bosh-password}}
    deployment: {{shibboleth-production-deployment-bosh-deployment}}
    ignore_ssl: false

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

- name: terraform-yaml-staging
  type: s3-iam
  source:
    bucket: {{tf-state-bucket}}
    versioned_file: {{tf-state-file-staging}}
    region_name: {{aws-region}}

- name: terraform-yaml-production
  type: s3-iam
  source:
    bucket: {{tf-state-bucket}}
    versioned_file: {{tf-state-file-production}}
    region_name: {{aws-region}}


resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: 18f-bosh-deployment
  type: docker-image
  source:
    repository: 18fgsa/bosh-deployment-resource

- name: cg-common
  type: docker-image
  source:
    repository: 18fgsa/cg-common-resource
